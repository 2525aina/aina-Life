rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // -------- appSettings --------
    match /appSettings/{document} {
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }

    // -------- dogs --------
    match /dogs/{petId} {
      function isAdmin() {
        return request.auth != null && request.auth.token.admin == true;
      }

      function isPetMember() {
        return request.auth != null &&
               exists(/databases/$(database)/documents/dogs/$(petId)/members/$(request.auth.uid));
      }

      // 管理者は全権限
      allow read, write: if isAdmin();

      // 一般ユーザーは自分のペットのみ可
      allow read, write: if isPetMember();

      // ---- members サブコレクション ----
      match /members/{memberId} {
        allow read, write: if isAdmin()
                           || (request.auth != null && request.auth.uid == memberId);
      }

      // ---- tasks サブコレクション ----
      match /tasks/{taskId} {
        allow read, write: if isAdmin() || isPetMember();
      }

      // ---- logs サブコレクション ----
      match /logs/{logId} {
        allow read, write: if isAdmin() || isPetMember();
      }
    }

    // -------- members (コレクショングループ) --------
    match /{path=**}/members/{memberId} {
      allow read: if request.auth != null &&
                  (resource.data.inviteEmail == request.auth.token.email ||
                   resource.data.uid == request.auth.uid);
      allow write: if false; // セキュリティのため直接書き込み禁止
    }

    // -------- users --------
    match /users/{userId} {
      function isAdmin() {
        return request.auth != null && request.auth.token.admin == true;
      }

      allow read, write: if isAdmin()
                         || (request.auth != null && request.auth.uid == userId);
    }
  }
}