rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // appSettings コレクションのルール: admin: true のカスタムクレームを持つユーザーのみ読み書き可能
    match /appSettings/{document} {
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }

    // dogs コレクションのルール:
    // - admin: true のカスタムクレームを持つユーザーはすべて読み書き可能
    // - それ以外のユーザーは、自分がメンバーであるペットのみ読み書き可能
    match /dogs/{petId} {
      allow read, write: if request.auth != null && request.auth.token.admin == true;

      // ユーザーがペットのメンバーであるかどうかのチェック
      function isPetMember(petId) {
        return exists(/databases/$(database)/documents/dogs/$(petId)/members/$(request.auth.uid));
      }

      // メンバーはペットのドキュメントを読み書きできる
      allow read, write: if request.auth != null && isPetMember(petId);

      // members サブコレクションのルール
      match /members/{memberId} {
        // admin: true のカスタムクレームを持つユーザーはすべて読み書き可能
        allow read, write: if request.auth != null && request.auth.token.admin == true;

        // メンバーは自分のメンバーシップドキュメントを読み書きできる
        allow read, write: if request.auth != null && request.auth.uid == memberId;
      }

      // tasks サブコレクションのルール
      match /tasks/{taskId} {
        allow read, write: if request.auth != null && isPetMember(petId);
      }

      // logs サブコレクションのルール
      match /logs/{logId} {
        allow read, write: if request.auth != null && isPetMember(petId);
      }
    }

    // 'members' コレクショングループに対する明示的なルール
    // 認証されており、かつドキュメントの inviteEmail が自身のメールアドレスと一致する場合に読み取りを許可
    match /{path=**}/members/{memberId} {
      allow read: if request.auth != null && resource.data.inviteEmail == request.auth.token.email;
    }
    // users コレクションのルール: admin: true のカスタムクレームを持つユーザーのみ読み書き可能
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.token.admin == true;
      // TODO: ユーザーは自分のプロフィールのみ読み書き可能にするルールを追加
    }
  }
}